// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module play_output_lanes (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        output_r_TREADY,
        A_0_V_V_dout,
        A_0_V_V_empty_n,
        A_0_V_V_read,
        A_1_V_V_dout,
        A_1_V_V_empty_n,
        A_1_V_V_read,
        A_2_V_V_dout,
        A_2_V_V_empty_n,
        A_2_V_V_read,
        A_3_V_V_dout,
        A_3_V_V_empty_n,
        A_3_V_V_read,
        A_4_V_V_dout,
        A_4_V_V_empty_n,
        A_4_V_V_read,
        A_5_V_V_dout,
        A_5_V_V_empty_n,
        A_5_V_V_read,
        A_6_V_V_dout,
        A_6_V_V_empty_n,
        A_6_V_V_read,
        A_7_V_V_dout,
        A_7_V_V_empty_n,
        A_7_V_V_read,
        A_8_V_V_dout,
        A_8_V_V_empty_n,
        A_8_V_V_read,
        A_9_V_V_dout,
        A_9_V_V_empty_n,
        A_9_V_V_read,
        A_10_V_V_dout,
        A_10_V_V_empty_n,
        A_10_V_V_read,
        A_11_V_V_dout,
        A_11_V_V_empty_n,
        A_11_V_V_read,
        A_12_V_V_dout,
        A_12_V_V_empty_n,
        A_12_V_V_read,
        A_13_V_V_dout,
        A_13_V_V_empty_n,
        A_13_V_V_read,
        A_14_V_V_dout,
        A_14_V_V_empty_n,
        A_14_V_V_read,
        A_15_V_V_dout,
        A_15_V_V_empty_n,
        A_15_V_V_read,
        B_0_V_V_dout,
        B_0_V_V_empty_n,
        B_0_V_V_read,
        B_1_V_V_dout,
        B_1_V_V_empty_n,
        B_1_V_V_read,
        B_2_V_V_dout,
        B_2_V_V_empty_n,
        B_2_V_V_read,
        B_3_V_V_dout,
        B_3_V_V_empty_n,
        B_3_V_V_read,
        B_4_V_V_dout,
        B_4_V_V_empty_n,
        B_4_V_V_read,
        B_5_V_V_dout,
        B_5_V_V_empty_n,
        B_5_V_V_read,
        B_6_V_V_dout,
        B_6_V_V_empty_n,
        B_6_V_V_read,
        B_7_V_V_dout,
        B_7_V_V_empty_n,
        B_7_V_V_read,
        B_8_V_V_dout,
        B_8_V_V_empty_n,
        B_8_V_V_read,
        B_9_V_V_dout,
        B_9_V_V_empty_n,
        B_9_V_V_read,
        B_10_V_V_dout,
        B_10_V_V_empty_n,
        B_10_V_V_read,
        B_11_V_V_dout,
        B_11_V_V_empty_n,
        B_11_V_V_read,
        B_12_V_V_dout,
        B_12_V_V_empty_n,
        B_12_V_V_read,
        B_13_V_V_dout,
        B_13_V_V_empty_n,
        B_13_V_V_read,
        B_14_V_V_dout,
        B_14_V_V_empty_n,
        B_14_V_V_read,
        B_15_V_V_dout,
        B_15_V_V_empty_n,
        B_15_V_V_read,
        C_0_V_V_dout,
        C_0_V_V_empty_n,
        C_0_V_V_read,
        C_1_V_V_dout,
        C_1_V_V_empty_n,
        C_1_V_V_read,
        C_2_V_V_dout,
        C_2_V_V_empty_n,
        C_2_V_V_read,
        C_3_V_V_dout,
        C_3_V_V_empty_n,
        C_3_V_V_read,
        C_4_V_V_dout,
        C_4_V_V_empty_n,
        C_4_V_V_read,
        C_5_V_V_dout,
        C_5_V_V_empty_n,
        C_5_V_V_read,
        C_6_V_V_dout,
        C_6_V_V_empty_n,
        C_6_V_V_read,
        C_7_V_V_dout,
        C_7_V_V_empty_n,
        C_7_V_V_read,
        C_8_V_V_dout,
        C_8_V_V_empty_n,
        C_8_V_V_read,
        C_9_V_V_dout,
        C_9_V_V_empty_n,
        C_9_V_V_read,
        C_10_V_V_dout,
        C_10_V_V_empty_n,
        C_10_V_V_read,
        C_11_V_V_dout,
        C_11_V_V_empty_n,
        C_11_V_V_read,
        C_12_V_V_dout,
        C_12_V_V_empty_n,
        C_12_V_V_read,
        C_13_V_V_dout,
        C_13_V_V_empty_n,
        C_13_V_V_read,
        C_14_V_V_dout,
        C_14_V_V_empty_n,
        C_14_V_V_read,
        C_15_V_V_dout,
        C_15_V_V_empty_n,
        C_15_V_V_read,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TLAST
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   output_r_TREADY;
input  [31:0] A_0_V_V_dout;
input   A_0_V_V_empty_n;
output   A_0_V_V_read;
input  [31:0] A_1_V_V_dout;
input   A_1_V_V_empty_n;
output   A_1_V_V_read;
input  [31:0] A_2_V_V_dout;
input   A_2_V_V_empty_n;
output   A_2_V_V_read;
input  [31:0] A_3_V_V_dout;
input   A_3_V_V_empty_n;
output   A_3_V_V_read;
input  [31:0] A_4_V_V_dout;
input   A_4_V_V_empty_n;
output   A_4_V_V_read;
input  [31:0] A_5_V_V_dout;
input   A_5_V_V_empty_n;
output   A_5_V_V_read;
input  [31:0] A_6_V_V_dout;
input   A_6_V_V_empty_n;
output   A_6_V_V_read;
input  [31:0] A_7_V_V_dout;
input   A_7_V_V_empty_n;
output   A_7_V_V_read;
input  [31:0] A_8_V_V_dout;
input   A_8_V_V_empty_n;
output   A_8_V_V_read;
input  [31:0] A_9_V_V_dout;
input   A_9_V_V_empty_n;
output   A_9_V_V_read;
input  [31:0] A_10_V_V_dout;
input   A_10_V_V_empty_n;
output   A_10_V_V_read;
input  [31:0] A_11_V_V_dout;
input   A_11_V_V_empty_n;
output   A_11_V_V_read;
input  [31:0] A_12_V_V_dout;
input   A_12_V_V_empty_n;
output   A_12_V_V_read;
input  [31:0] A_13_V_V_dout;
input   A_13_V_V_empty_n;
output   A_13_V_V_read;
input  [31:0] A_14_V_V_dout;
input   A_14_V_V_empty_n;
output   A_14_V_V_read;
input  [31:0] A_15_V_V_dout;
input   A_15_V_V_empty_n;
output   A_15_V_V_read;
input  [31:0] B_0_V_V_dout;
input   B_0_V_V_empty_n;
output   B_0_V_V_read;
input  [31:0] B_1_V_V_dout;
input   B_1_V_V_empty_n;
output   B_1_V_V_read;
input  [31:0] B_2_V_V_dout;
input   B_2_V_V_empty_n;
output   B_2_V_V_read;
input  [31:0] B_3_V_V_dout;
input   B_3_V_V_empty_n;
output   B_3_V_V_read;
input  [31:0] B_4_V_V_dout;
input   B_4_V_V_empty_n;
output   B_4_V_V_read;
input  [31:0] B_5_V_V_dout;
input   B_5_V_V_empty_n;
output   B_5_V_V_read;
input  [31:0] B_6_V_V_dout;
input   B_6_V_V_empty_n;
output   B_6_V_V_read;
input  [31:0] B_7_V_V_dout;
input   B_7_V_V_empty_n;
output   B_7_V_V_read;
input  [31:0] B_8_V_V_dout;
input   B_8_V_V_empty_n;
output   B_8_V_V_read;
input  [31:0] B_9_V_V_dout;
input   B_9_V_V_empty_n;
output   B_9_V_V_read;
input  [31:0] B_10_V_V_dout;
input   B_10_V_V_empty_n;
output   B_10_V_V_read;
input  [31:0] B_11_V_V_dout;
input   B_11_V_V_empty_n;
output   B_11_V_V_read;
input  [31:0] B_12_V_V_dout;
input   B_12_V_V_empty_n;
output   B_12_V_V_read;
input  [31:0] B_13_V_V_dout;
input   B_13_V_V_empty_n;
output   B_13_V_V_read;
input  [31:0] B_14_V_V_dout;
input   B_14_V_V_empty_n;
output   B_14_V_V_read;
input  [31:0] B_15_V_V_dout;
input   B_15_V_V_empty_n;
output   B_15_V_V_read;
input  [31:0] C_0_V_V_dout;
input   C_0_V_V_empty_n;
output   C_0_V_V_read;
input  [31:0] C_1_V_V_dout;
input   C_1_V_V_empty_n;
output   C_1_V_V_read;
input  [31:0] C_2_V_V_dout;
input   C_2_V_V_empty_n;
output   C_2_V_V_read;
input  [31:0] C_3_V_V_dout;
input   C_3_V_V_empty_n;
output   C_3_V_V_read;
input  [31:0] C_4_V_V_dout;
input   C_4_V_V_empty_n;
output   C_4_V_V_read;
input  [31:0] C_5_V_V_dout;
input   C_5_V_V_empty_n;
output   C_5_V_V_read;
input  [31:0] C_6_V_V_dout;
input   C_6_V_V_empty_n;
output   C_6_V_V_read;
input  [31:0] C_7_V_V_dout;
input   C_7_V_V_empty_n;
output   C_7_V_V_read;
input  [31:0] C_8_V_V_dout;
input   C_8_V_V_empty_n;
output   C_8_V_V_read;
input  [31:0] C_9_V_V_dout;
input   C_9_V_V_empty_n;
output   C_9_V_V_read;
input  [31:0] C_10_V_V_dout;
input   C_10_V_V_empty_n;
output   C_10_V_V_read;
input  [31:0] C_11_V_V_dout;
input   C_11_V_V_empty_n;
output   C_11_V_V_read;
input  [31:0] C_12_V_V_dout;
input   C_12_V_V_empty_n;
output   C_12_V_V_read;
input  [31:0] C_13_V_V_dout;
input   C_13_V_V_empty_n;
output   C_13_V_V_read;
input  [31:0] C_14_V_V_dout;
input   C_14_V_V_empty_n;
output   C_14_V_V_read;
input  [31:0] C_15_V_V_dout;
input   C_15_V_V_empty_n;
output   C_15_V_V_read;
output  [511:0] output_r_TDATA;
output   output_r_TVALID;
output  [0:0] output_r_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_0_V_V_read;
reg A_1_V_V_read;
reg A_2_V_V_read;
reg A_3_V_V_read;
reg A_4_V_V_read;
reg A_5_V_V_read;
reg A_6_V_V_read;
reg A_7_V_V_read;
reg A_8_V_V_read;
reg A_9_V_V_read;
reg A_10_V_V_read;
reg A_11_V_V_read;
reg A_12_V_V_read;
reg A_13_V_V_read;
reg A_14_V_V_read;
reg A_15_V_V_read;
reg B_0_V_V_read;
reg B_1_V_V_read;
reg B_2_V_V_read;
reg B_3_V_V_read;
reg B_4_V_V_read;
reg B_5_V_V_read;
reg B_6_V_V_read;
reg B_7_V_V_read;
reg B_8_V_V_read;
reg B_9_V_V_read;
reg B_10_V_V_read;
reg B_11_V_V_read;
reg B_12_V_V_read;
reg B_13_V_V_read;
reg B_14_V_V_read;
reg B_15_V_V_read;
reg C_0_V_V_read;
reg C_1_V_V_read;
reg C_2_V_V_read;
reg C_3_V_V_read;
reg C_4_V_V_read;
reg C_5_V_V_read;
reg C_6_V_V_read;
reg C_7_V_V_read;
reg C_8_V_V_read;
reg C_9_V_V_read;
reg C_10_V_V_read;
reg C_11_V_V_read;
reg C_12_V_V_read;
reg C_13_V_V_read;
reg C_14_V_V_read;
reg C_15_V_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln59_1_fu_677_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_enable_reg_pp0_iter1;
wire    regslice_forward_output_data_V_U_apdone_blk;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp0_stage0_11001;
reg    output_r_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg   [8:0] cycle_01_reg_473;
wire   [0:0] tmp_17_fu_663_p3;
reg   [0:0] tmp_17_reg_932;
reg   [0:0] icmp_ln59_1_reg_936;
reg   [0:0] icmp_ln59_1_reg_936_pp0_iter1_reg;
wire   [0:0] or_ln59_fu_683_p2;
reg   [0:0] or_ln59_reg_940;
wire   [0:0] icmp_ln50_fu_689_p2;
reg   [0:0] icmp_ln50_reg_945;
wire   [8:0] cycle_fu_695_p2;
reg   [8:0] cycle_reg_949;
reg   [31:0] tmp_V_reg_954;
reg   [31:0] tmp_V_17_reg_959;
reg   [31:0] tmp_V_16_reg_964;
reg   [31:0] tmp_V_18_reg_969;
reg   [31:0] tmp_V_20_reg_974;
reg   [31:0] tmp_V_19_reg_979;
reg   [31:0] tmp_V_21_reg_984;
reg   [31:0] tmp_V_23_reg_989;
reg   [31:0] tmp_V_22_reg_994;
reg   [31:0] tmp_V_24_reg_999;
reg   [31:0] tmp_V_26_reg_1004;
reg   [31:0] tmp_V_25_reg_1009;
reg   [31:0] tmp_V_27_reg_1014;
reg   [31:0] tmp_V_29_reg_1019;
reg   [31:0] tmp_V_28_reg_1024;
reg   [31:0] tmp_V_30_reg_1029;
reg   [31:0] tmp_V_32_reg_1034;
reg   [31:0] tmp_V_31_reg_1039;
reg   [31:0] tmp_V_33_reg_1044;
reg   [31:0] tmp_V_35_reg_1049;
reg   [31:0] tmp_V_34_reg_1054;
reg   [31:0] tmp_V_36_reg_1059;
reg   [31:0] tmp_V_38_reg_1064;
reg   [31:0] tmp_V_37_reg_1069;
reg   [31:0] tmp_V_39_reg_1074;
reg   [31:0] tmp_V_41_reg_1079;
reg   [31:0] tmp_V_40_reg_1084;
reg   [31:0] tmp_V_42_reg_1089;
reg   [31:0] tmp_V_44_reg_1094;
reg   [31:0] tmp_V_43_reg_1099;
reg   [31:0] tmp_V_45_reg_1104;
reg   [31:0] tmp_V_47_reg_1109;
reg   [31:0] tmp_V_46_reg_1114;
reg   [31:0] tmp_V_48_reg_1119;
reg   [31:0] tmp_V_50_reg_1124;
reg   [31:0] tmp_V_49_reg_1129;
reg   [31:0] tmp_V_51_reg_1134;
reg   [31:0] tmp_V_53_reg_1139;
reg   [31:0] tmp_V_52_reg_1144;
reg   [31:0] tmp_V_54_reg_1149;
reg   [31:0] tmp_V_56_reg_1154;
reg   [31:0] tmp_V_55_reg_1159;
reg   [31:0] tmp_V_57_reg_1164;
reg   [31:0] tmp_V_59_reg_1169;
reg   [31:0] tmp_V_58_reg_1174;
reg   [31:0] tmp_V_60_reg_1179;
reg   [31:0] tmp_V_62_reg_1184;
reg   [31:0] tmp_V_61_reg_1189;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg   [8:0] ap_phi_mux_cycle_01_phi_fu_477_p6;
reg   [31:0] ap_phi_mux_p_037_1_0_phi_fu_490_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_0_reg_487;
reg   [31:0] ap_phi_mux_p_037_1_1_phi_fu_501_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_1_reg_498;
reg   [31:0] ap_phi_mux_p_037_1_2_phi_fu_512_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_2_reg_509;
reg   [31:0] ap_phi_mux_p_037_1_3_phi_fu_523_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_3_reg_520;
reg   [31:0] ap_phi_mux_p_037_1_4_phi_fu_534_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_4_reg_531;
reg   [31:0] ap_phi_mux_p_037_1_5_phi_fu_545_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_5_reg_542;
reg   [31:0] ap_phi_mux_p_037_1_6_phi_fu_556_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_6_reg_553;
reg   [31:0] ap_phi_mux_p_037_1_7_phi_fu_567_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_7_reg_564;
reg   [31:0] ap_phi_mux_p_037_1_8_phi_fu_578_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_8_reg_575;
reg   [31:0] ap_phi_mux_p_037_1_9_phi_fu_589_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_9_reg_586;
reg   [31:0] ap_phi_mux_p_037_1_10_phi_fu_600_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_10_reg_597;
reg   [31:0] ap_phi_mux_p_037_1_11_phi_fu_611_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_11_reg_608;
reg   [31:0] ap_phi_mux_p_037_1_12_phi_fu_622_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_12_reg_619;
reg   [31:0] ap_phi_mux_p_037_1_13_phi_fu_633_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_13_reg_630;
reg   [31:0] ap_phi_mux_p_037_1_14_phi_fu_644_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_14_reg_641;
reg   [31:0] ap_phi_mux_p_037_1_15_phi_fu_655_p6;
wire   [31:0] ap_phi_reg_pp0_iter1_p_037_1_15_reg_652;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln59_fu_671_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [511:0] output_r_TDATA_int;
reg    output_r_TVALID_int;
wire    output_r_TREADY_int;
wire    regslice_forward_output_data_V_U_vld_out;
wire    regslice_forward_output_last_V_U_apdone_blk;
wire    regslice_forward_output_last_V_U_ack_in_dummy;
wire    regslice_forward_output_last_V_U_vld_out;
reg    ap_condition_258;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

regslice_forward #(
    .DataWidth( 512 ))
regslice_forward_output_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(output_r_TDATA_int),
    .vld_in(output_r_TVALID_int),
    .ack_in(output_r_TREADY_int),
    .data_out(output_r_TDATA),
    .vld_out(regslice_forward_output_data_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_forward_output_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_output_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(or_ln59_reg_940),
    .vld_in(output_r_TVALID_int),
    .ack_in(regslice_forward_output_last_V_U_ack_in_dummy),
    .data_out(output_r_TLAST),
    .vld_out(regslice_forward_output_last_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_forward_output_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln59_1_reg_936_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln59_1_reg_936 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cycle_01_reg_473 <= cycle_reg_949;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln59_1_reg_936 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        cycle_01_reg_473 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cycle_reg_949 <= cycle_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln50_reg_945 <= icmp_ln50_fu_689_p2;
        icmp_ln59_1_reg_936 <= icmp_ln59_1_fu_677_p2;
        icmp_ln59_1_reg_936_pp0_iter1_reg <= icmp_ln59_1_reg_936;
        or_ln59_reg_940 <= or_ln59_fu_683_p2;
        tmp_17_reg_932 <= ap_phi_mux_cycle_01_phi_fu_477_p6[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_16_reg_964 <= B_0_V_V_dout;
        tmp_V_19_reg_979 <= B_1_V_V_dout;
        tmp_V_22_reg_994 <= B_2_V_V_dout;
        tmp_V_25_reg_1009 <= B_3_V_V_dout;
        tmp_V_28_reg_1024 <= B_4_V_V_dout;
        tmp_V_31_reg_1039 <= B_5_V_V_dout;
        tmp_V_34_reg_1054 <= B_6_V_V_dout;
        tmp_V_37_reg_1069 <= B_7_V_V_dout;
        tmp_V_40_reg_1084 <= B_8_V_V_dout;
        tmp_V_43_reg_1099 <= B_9_V_V_dout;
        tmp_V_46_reg_1114 <= B_10_V_V_dout;
        tmp_V_49_reg_1129 <= B_11_V_V_dout;
        tmp_V_52_reg_1144 <= B_12_V_V_dout;
        tmp_V_55_reg_1159 <= B_13_V_V_dout;
        tmp_V_58_reg_1174 <= B_14_V_V_dout;
        tmp_V_61_reg_1189 <= B_15_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_17_reg_959 <= C_0_V_V_dout;
        tmp_V_20_reg_974 <= C_1_V_V_dout;
        tmp_V_23_reg_989 <= C_2_V_V_dout;
        tmp_V_26_reg_1004 <= C_3_V_V_dout;
        tmp_V_29_reg_1019 <= C_4_V_V_dout;
        tmp_V_32_reg_1034 <= C_5_V_V_dout;
        tmp_V_35_reg_1049 <= C_6_V_V_dout;
        tmp_V_38_reg_1064 <= C_7_V_V_dout;
        tmp_V_41_reg_1079 <= C_8_V_V_dout;
        tmp_V_44_reg_1094 <= C_9_V_V_dout;
        tmp_V_47_reg_1109 <= C_10_V_V_dout;
        tmp_V_50_reg_1124 <= C_11_V_V_dout;
        tmp_V_53_reg_1139 <= C_12_V_V_dout;
        tmp_V_56_reg_1154 <= C_13_V_V_dout;
        tmp_V_59_reg_1169 <= C_14_V_V_dout;
        tmp_V_62_reg_1184 <= C_15_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_18_reg_969 <= A_1_V_V_dout;
        tmp_V_21_reg_984 <= A_2_V_V_dout;
        tmp_V_24_reg_999 <= A_3_V_V_dout;
        tmp_V_27_reg_1014 <= A_4_V_V_dout;
        tmp_V_30_reg_1029 <= A_5_V_V_dout;
        tmp_V_33_reg_1044 <= A_6_V_V_dout;
        tmp_V_36_reg_1059 <= A_7_V_V_dout;
        tmp_V_39_reg_1074 <= A_8_V_V_dout;
        tmp_V_42_reg_1089 <= A_9_V_V_dout;
        tmp_V_45_reg_1104 <= A_10_V_V_dout;
        tmp_V_48_reg_1119 <= A_11_V_V_dout;
        tmp_V_51_reg_1134 <= A_12_V_V_dout;
        tmp_V_54_reg_1149 <= A_13_V_V_dout;
        tmp_V_57_reg_1164 <= A_14_V_V_dout;
        tmp_V_60_reg_1179 <= A_15_V_V_dout;
        tmp_V_reg_954 <= A_0_V_V_dout;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (1'b1 == A_0_V_V_empty_n) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_0_V_V_read = 1'b1;
    end else begin
        A_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_10_V_V_empty_n))) begin
        A_10_V_V_read = 1'b1;
    end else begin
        A_10_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_11_V_V_empty_n))) begin
        A_11_V_V_read = 1'b1;
    end else begin
        A_11_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_12_V_V_empty_n))) begin
        A_12_V_V_read = 1'b1;
    end else begin
        A_12_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_13_V_V_empty_n))) begin
        A_13_V_V_read = 1'b1;
    end else begin
        A_13_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_14_V_V_empty_n))) begin
        A_14_V_V_read = 1'b1;
    end else begin
        A_14_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_15_V_V_empty_n))) begin
        A_15_V_V_read = 1'b1;
    end else begin
        A_15_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (1'b1 == A_1_V_V_empty_n) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_1_V_V_read = 1'b1;
    end else begin
        A_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (1'b1 == A_2_V_V_empty_n) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_2_V_V_read = 1'b1;
    end else begin
        A_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (1'b1 == A_3_V_V_empty_n) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_3_V_V_read = 1'b1;
    end else begin
        A_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (1'b1 == A_4_V_V_empty_n) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_4_V_V_read = 1'b1;
    end else begin
        A_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (1'b1 == A_5_V_V_empty_n) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_5_V_V_read = 1'b1;
    end else begin
        A_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (1'b1 == A_6_V_V_empty_n) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_6_V_V_read = 1'b1;
    end else begin
        A_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (1'b1 == A_7_V_V_empty_n) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_7_V_V_read = 1'b1;
    end else begin
        A_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (1'b1 == A_8_V_V_empty_n) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_8_V_V_read = 1'b1;
    end else begin
        A_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_663_p3 == 1'd0) & (1'b1 == A_9_V_V_empty_n) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_9_V_V_read = 1'b1;
    end else begin
        A_9_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_0_V_V_empty_n))) begin
        B_0_V_V_read = 1'b1;
    end else begin
        B_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_10_V_V_empty_n))) begin
        B_10_V_V_read = 1'b1;
    end else begin
        B_10_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_11_V_V_empty_n))) begin
        B_11_V_V_read = 1'b1;
    end else begin
        B_11_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_12_V_V_empty_n))) begin
        B_12_V_V_read = 1'b1;
    end else begin
        B_12_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_13_V_V_empty_n))) begin
        B_13_V_V_read = 1'b1;
    end else begin
        B_13_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_14_V_V_empty_n))) begin
        B_14_V_V_read = 1'b1;
    end else begin
        B_14_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_15_V_V_empty_n))) begin
        B_15_V_V_read = 1'b1;
    end else begin
        B_15_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_1_V_V_empty_n))) begin
        B_1_V_V_read = 1'b1;
    end else begin
        B_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_2_V_V_empty_n))) begin
        B_2_V_V_read = 1'b1;
    end else begin
        B_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_3_V_V_empty_n))) begin
        B_3_V_V_read = 1'b1;
    end else begin
        B_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_4_V_V_empty_n))) begin
        B_4_V_V_read = 1'b1;
    end else begin
        B_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_5_V_V_empty_n))) begin
        B_5_V_V_read = 1'b1;
    end else begin
        B_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_6_V_V_empty_n))) begin
        B_6_V_V_read = 1'b1;
    end else begin
        B_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_7_V_V_empty_n))) begin
        B_7_V_V_read = 1'b1;
    end else begin
        B_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_8_V_V_empty_n))) begin
        B_8_V_V_read = 1'b1;
    end else begin
        B_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd1) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_9_V_V_empty_n))) begin
        B_9_V_V_read = 1'b1;
    end else begin
        B_9_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_0_V_V_empty_n))) begin
        C_0_V_V_read = 1'b1;
    end else begin
        C_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_10_V_V_empty_n))) begin
        C_10_V_V_read = 1'b1;
    end else begin
        C_10_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_11_V_V_empty_n))) begin
        C_11_V_V_read = 1'b1;
    end else begin
        C_11_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_12_V_V_empty_n))) begin
        C_12_V_V_read = 1'b1;
    end else begin
        C_12_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_13_V_V_empty_n))) begin
        C_13_V_V_read = 1'b1;
    end else begin
        C_13_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_14_V_V_empty_n))) begin
        C_14_V_V_read = 1'b1;
    end else begin
        C_14_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_15_V_V_empty_n))) begin
        C_15_V_V_read = 1'b1;
    end else begin
        C_15_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_1_V_V_empty_n))) begin
        C_1_V_V_read = 1'b1;
    end else begin
        C_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_2_V_V_empty_n))) begin
        C_2_V_V_read = 1'b1;
    end else begin
        C_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_3_V_V_empty_n))) begin
        C_3_V_V_read = 1'b1;
    end else begin
        C_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_4_V_V_empty_n))) begin
        C_4_V_V_read = 1'b1;
    end else begin
        C_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_5_V_V_empty_n))) begin
        C_5_V_V_read = 1'b1;
    end else begin
        C_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_6_V_V_empty_n))) begin
        C_6_V_V_read = 1'b1;
    end else begin
        C_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_7_V_V_empty_n))) begin
        C_7_V_V_read = 1'b1;
    end else begin
        C_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_8_V_V_empty_n))) begin
        C_8_V_V_read = 1'b1;
    end else begin
        C_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_fu_689_p2 == 1'd0) & (tmp_17_fu_663_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_9_V_V_empty_n))) begin
        C_9_V_V_read = 1'b1;
    end else begin
        C_9_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln59_1_reg_936_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_258)) begin
        if ((icmp_ln59_1_reg_936 == 1'd1)) begin
            ap_phi_mux_cycle_01_phi_fu_477_p6 = 9'd0;
        end else if ((icmp_ln59_1_reg_936 == 1'd0)) begin
            ap_phi_mux_cycle_01_phi_fu_477_p6 = cycle_reg_949;
        end else begin
            ap_phi_mux_cycle_01_phi_fu_477_p6 = cycle_01_reg_473;
        end
    end else begin
        ap_phi_mux_cycle_01_phi_fu_477_p6 = cycle_01_reg_473;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_0_phi_fu_490_p6 = tmp_V_17_reg_959;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_0_phi_fu_490_p6 = tmp_V_16_reg_964;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_0_phi_fu_490_p6 = tmp_V_reg_954;
    end else begin
        ap_phi_mux_p_037_1_0_phi_fu_490_p6 = ap_phi_reg_pp0_iter1_p_037_1_0_reg_487;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_10_phi_fu_600_p6 = tmp_V_47_reg_1109;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_10_phi_fu_600_p6 = tmp_V_46_reg_1114;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_10_phi_fu_600_p6 = tmp_V_45_reg_1104;
    end else begin
        ap_phi_mux_p_037_1_10_phi_fu_600_p6 = ap_phi_reg_pp0_iter1_p_037_1_10_reg_597;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_11_phi_fu_611_p6 = tmp_V_50_reg_1124;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_11_phi_fu_611_p6 = tmp_V_49_reg_1129;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_11_phi_fu_611_p6 = tmp_V_48_reg_1119;
    end else begin
        ap_phi_mux_p_037_1_11_phi_fu_611_p6 = ap_phi_reg_pp0_iter1_p_037_1_11_reg_608;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_12_phi_fu_622_p6 = tmp_V_53_reg_1139;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_12_phi_fu_622_p6 = tmp_V_52_reg_1144;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_12_phi_fu_622_p6 = tmp_V_51_reg_1134;
    end else begin
        ap_phi_mux_p_037_1_12_phi_fu_622_p6 = ap_phi_reg_pp0_iter1_p_037_1_12_reg_619;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_13_phi_fu_633_p6 = tmp_V_56_reg_1154;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_13_phi_fu_633_p6 = tmp_V_55_reg_1159;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_13_phi_fu_633_p6 = tmp_V_54_reg_1149;
    end else begin
        ap_phi_mux_p_037_1_13_phi_fu_633_p6 = ap_phi_reg_pp0_iter1_p_037_1_13_reg_630;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_14_phi_fu_644_p6 = tmp_V_59_reg_1169;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_14_phi_fu_644_p6 = tmp_V_58_reg_1174;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_14_phi_fu_644_p6 = tmp_V_57_reg_1164;
    end else begin
        ap_phi_mux_p_037_1_14_phi_fu_644_p6 = ap_phi_reg_pp0_iter1_p_037_1_14_reg_641;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_15_phi_fu_655_p6 = tmp_V_62_reg_1184;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_15_phi_fu_655_p6 = tmp_V_61_reg_1189;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_15_phi_fu_655_p6 = tmp_V_60_reg_1179;
    end else begin
        ap_phi_mux_p_037_1_15_phi_fu_655_p6 = ap_phi_reg_pp0_iter1_p_037_1_15_reg_652;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_1_phi_fu_501_p6 = tmp_V_20_reg_974;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_1_phi_fu_501_p6 = tmp_V_19_reg_979;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_1_phi_fu_501_p6 = tmp_V_18_reg_969;
    end else begin
        ap_phi_mux_p_037_1_1_phi_fu_501_p6 = ap_phi_reg_pp0_iter1_p_037_1_1_reg_498;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_2_phi_fu_512_p6 = tmp_V_23_reg_989;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_2_phi_fu_512_p6 = tmp_V_22_reg_994;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_2_phi_fu_512_p6 = tmp_V_21_reg_984;
    end else begin
        ap_phi_mux_p_037_1_2_phi_fu_512_p6 = ap_phi_reg_pp0_iter1_p_037_1_2_reg_509;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_3_phi_fu_523_p6 = tmp_V_26_reg_1004;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_3_phi_fu_523_p6 = tmp_V_25_reg_1009;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_3_phi_fu_523_p6 = tmp_V_24_reg_999;
    end else begin
        ap_phi_mux_p_037_1_3_phi_fu_523_p6 = ap_phi_reg_pp0_iter1_p_037_1_3_reg_520;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_4_phi_fu_534_p6 = tmp_V_29_reg_1019;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_4_phi_fu_534_p6 = tmp_V_28_reg_1024;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_4_phi_fu_534_p6 = tmp_V_27_reg_1014;
    end else begin
        ap_phi_mux_p_037_1_4_phi_fu_534_p6 = ap_phi_reg_pp0_iter1_p_037_1_4_reg_531;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_5_phi_fu_545_p6 = tmp_V_32_reg_1034;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_5_phi_fu_545_p6 = tmp_V_31_reg_1039;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_5_phi_fu_545_p6 = tmp_V_30_reg_1029;
    end else begin
        ap_phi_mux_p_037_1_5_phi_fu_545_p6 = ap_phi_reg_pp0_iter1_p_037_1_5_reg_542;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_6_phi_fu_556_p6 = tmp_V_35_reg_1049;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_6_phi_fu_556_p6 = tmp_V_34_reg_1054;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_6_phi_fu_556_p6 = tmp_V_33_reg_1044;
    end else begin
        ap_phi_mux_p_037_1_6_phi_fu_556_p6 = ap_phi_reg_pp0_iter1_p_037_1_6_reg_553;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_7_phi_fu_567_p6 = tmp_V_38_reg_1064;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_7_phi_fu_567_p6 = tmp_V_37_reg_1069;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_7_phi_fu_567_p6 = tmp_V_36_reg_1059;
    end else begin
        ap_phi_mux_p_037_1_7_phi_fu_567_p6 = ap_phi_reg_pp0_iter1_p_037_1_7_reg_564;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_8_phi_fu_578_p6 = tmp_V_41_reg_1079;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_8_phi_fu_578_p6 = tmp_V_40_reg_1084;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_8_phi_fu_578_p6 = tmp_V_39_reg_1074;
    end else begin
        ap_phi_mux_p_037_1_8_phi_fu_578_p6 = ap_phi_reg_pp0_iter1_p_037_1_8_reg_575;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_945 == 1'd0) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_9_phi_fu_589_p6 = tmp_V_44_reg_1094;
    end else if (((icmp_ln50_reg_945 == 1'd1) & (tmp_17_reg_932 == 1'd1))) begin
        ap_phi_mux_p_037_1_9_phi_fu_589_p6 = tmp_V_43_reg_1099;
    end else if ((tmp_17_reg_932 == 1'd0)) begin
        ap_phi_mux_p_037_1_9_phi_fu_589_p6 = tmp_V_42_reg_1089;
    end else begin
        ap_phi_mux_p_037_1_9_phi_fu_589_p6 = ap_phi_reg_pp0_iter1_p_037_1_9_reg_586;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln59_1_fu_677_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output_r_TDATA_blk_n = output_r_TREADY_int;
    end else begin
        output_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_r_TVALID_int = 1'b1;
    end else begin
        output_r_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (regslice_forward_output_data_V_U_apdone_blk == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((output_r_TREADY_int == 1'b0) | (regslice_forward_output_data_V_U_apdone_blk == 1'b1))) | ((output_r_TREADY_int == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((output_r_TREADY_int == 1'b0) | (regslice_forward_output_data_V_U_apdone_blk == 1'b1))) | ((output_r_TREADY_int == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = (regslice_forward_output_data_V_U_apdone_blk == 1'b1);
end

always @ (*) begin
    ap_condition_258 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter1_p_037_1_0_reg_487 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_10_reg_597 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_11_reg_608 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_12_reg_619 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_13_reg_630 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_14_reg_641 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_15_reg_652 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_1_reg_498 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_2_reg_509 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_3_reg_520 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_4_reg_531 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_5_reg_542 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_6_reg_553 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_7_reg_564 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_8_reg_575 = 'bx;

assign ap_phi_reg_pp0_iter1_p_037_1_9_reg_586 = 'bx;

assign cycle_fu_695_p2 = (ap_phi_mux_cycle_01_phi_fu_477_p6 + 9'd1);

assign icmp_ln50_fu_689_p2 = ((ap_phi_mux_cycle_01_phi_fu_477_p6 > 9'd383) ? 1'b1 : 1'b0);

assign icmp_ln59_1_fu_677_p2 = ((ap_phi_mux_cycle_01_phi_fu_477_p6 == 9'd511) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_671_p2 = ((ap_phi_mux_cycle_01_phi_fu_477_p6 == 9'd255) ? 1'b1 : 1'b0);

assign or_ln59_fu_683_p2 = (icmp_ln59_fu_671_p2 | icmp_ln59_1_fu_677_p2);

assign output_r_TDATA_int = {{{{{{{{{{{{{{{{ap_phi_mux_p_037_1_15_phi_fu_655_p6}, {ap_phi_mux_p_037_1_14_phi_fu_644_p6}}, {ap_phi_mux_p_037_1_13_phi_fu_633_p6}}, {ap_phi_mux_p_037_1_12_phi_fu_622_p6}}, {ap_phi_mux_p_037_1_11_phi_fu_611_p6}}, {ap_phi_mux_p_037_1_10_phi_fu_600_p6}}, {ap_phi_mux_p_037_1_9_phi_fu_589_p6}}, {ap_phi_mux_p_037_1_8_phi_fu_578_p6}}, {ap_phi_mux_p_037_1_7_phi_fu_567_p6}}, {ap_phi_mux_p_037_1_6_phi_fu_556_p6}}, {ap_phi_mux_p_037_1_5_phi_fu_545_p6}}, {ap_phi_mux_p_037_1_4_phi_fu_534_p6}}, {ap_phi_mux_p_037_1_3_phi_fu_523_p6}}, {ap_phi_mux_p_037_1_2_phi_fu_512_p6}}, {ap_phi_mux_p_037_1_1_phi_fu_501_p6}}, {ap_phi_mux_p_037_1_0_phi_fu_490_p6}};

assign output_r_TVALID = regslice_forward_output_data_V_U_vld_out;

assign tmp_17_fu_663_p3 = ap_phi_mux_cycle_01_phi_fu_477_p6[32'd8];

endmodule //play_output_lanes
