// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module play_output_lanes2ou (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        i_output_TREADY,
        q_output_TREADY,
        A_0_V_V_dout,
        A_0_V_V_empty_n,
        A_0_V_V_read,
        A_1_V_V_dout,
        A_1_V_V_empty_n,
        A_1_V_V_read,
        A_2_V_V_dout,
        A_2_V_V_empty_n,
        A_2_V_V_read,
        A_3_V_V_dout,
        A_3_V_V_empty_n,
        A_3_V_V_read,
        A_4_V_V_dout,
        A_4_V_V_empty_n,
        A_4_V_V_read,
        A_5_V_V_dout,
        A_5_V_V_empty_n,
        A_5_V_V_read,
        A_6_V_V_dout,
        A_6_V_V_empty_n,
        A_6_V_V_read,
        A_7_V_V_dout,
        A_7_V_V_empty_n,
        A_7_V_V_read,
        A_8_V_V_dout,
        A_8_V_V_empty_n,
        A_8_V_V_read,
        A_9_V_V_dout,
        A_9_V_V_empty_n,
        A_9_V_V_read,
        A_10_V_V_dout,
        A_10_V_V_empty_n,
        A_10_V_V_read,
        A_11_V_V_dout,
        A_11_V_V_empty_n,
        A_11_V_V_read,
        A_12_V_V_dout,
        A_12_V_V_empty_n,
        A_12_V_V_read,
        A_13_V_V_dout,
        A_13_V_V_empty_n,
        A_13_V_V_read,
        A_14_V_V_dout,
        A_14_V_V_empty_n,
        A_14_V_V_read,
        A_15_V_V_dout,
        A_15_V_V_empty_n,
        A_15_V_V_read,
        B_0_V_V_dout,
        B_0_V_V_empty_n,
        B_0_V_V_read,
        B_1_V_V_dout,
        B_1_V_V_empty_n,
        B_1_V_V_read,
        B_2_V_V_dout,
        B_2_V_V_empty_n,
        B_2_V_V_read,
        B_3_V_V_dout,
        B_3_V_V_empty_n,
        B_3_V_V_read,
        B_4_V_V_dout,
        B_4_V_V_empty_n,
        B_4_V_V_read,
        B_5_V_V_dout,
        B_5_V_V_empty_n,
        B_5_V_V_read,
        B_6_V_V_dout,
        B_6_V_V_empty_n,
        B_6_V_V_read,
        B_7_V_V_dout,
        B_7_V_V_empty_n,
        B_7_V_V_read,
        B_8_V_V_dout,
        B_8_V_V_empty_n,
        B_8_V_V_read,
        B_9_V_V_dout,
        B_9_V_V_empty_n,
        B_9_V_V_read,
        B_10_V_V_dout,
        B_10_V_V_empty_n,
        B_10_V_V_read,
        B_11_V_V_dout,
        B_11_V_V_empty_n,
        B_11_V_V_read,
        B_12_V_V_dout,
        B_12_V_V_empty_n,
        B_12_V_V_read,
        B_13_V_V_dout,
        B_13_V_V_empty_n,
        B_13_V_V_read,
        B_14_V_V_dout,
        B_14_V_V_empty_n,
        B_14_V_V_read,
        B_15_V_V_dout,
        B_15_V_V_empty_n,
        B_15_V_V_read,
        C_0_V_V_dout,
        C_0_V_V_empty_n,
        C_0_V_V_read,
        C_1_V_V_dout,
        C_1_V_V_empty_n,
        C_1_V_V_read,
        C_2_V_V_dout,
        C_2_V_V_empty_n,
        C_2_V_V_read,
        C_3_V_V_dout,
        C_3_V_V_empty_n,
        C_3_V_V_read,
        C_4_V_V_dout,
        C_4_V_V_empty_n,
        C_4_V_V_read,
        C_5_V_V_dout,
        C_5_V_V_empty_n,
        C_5_V_V_read,
        C_6_V_V_dout,
        C_6_V_V_empty_n,
        C_6_V_V_read,
        C_7_V_V_dout,
        C_7_V_V_empty_n,
        C_7_V_V_read,
        C_8_V_V_dout,
        C_8_V_V_empty_n,
        C_8_V_V_read,
        C_9_V_V_dout,
        C_9_V_V_empty_n,
        C_9_V_V_read,
        C_10_V_V_dout,
        C_10_V_V_empty_n,
        C_10_V_V_read,
        C_11_V_V_dout,
        C_11_V_V_empty_n,
        C_11_V_V_read,
        C_12_V_V_dout,
        C_12_V_V_empty_n,
        C_12_V_V_read,
        C_13_V_V_dout,
        C_13_V_V_empty_n,
        C_13_V_V_read,
        C_14_V_V_dout,
        C_14_V_V_empty_n,
        C_14_V_V_read,
        C_15_V_V_dout,
        C_15_V_V_empty_n,
        C_15_V_V_read,
        i_output_TDATA,
        i_output_TVALID,
        i_output_TLAST,
        q_output_TDATA,
        q_output_TVALID,
        q_output_TLAST
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   i_output_TREADY;
input   q_output_TREADY;
input  [31:0] A_0_V_V_dout;
input   A_0_V_V_empty_n;
output   A_0_V_V_read;
input  [31:0] A_1_V_V_dout;
input   A_1_V_V_empty_n;
output   A_1_V_V_read;
input  [31:0] A_2_V_V_dout;
input   A_2_V_V_empty_n;
output   A_2_V_V_read;
input  [31:0] A_3_V_V_dout;
input   A_3_V_V_empty_n;
output   A_3_V_V_read;
input  [31:0] A_4_V_V_dout;
input   A_4_V_V_empty_n;
output   A_4_V_V_read;
input  [31:0] A_5_V_V_dout;
input   A_5_V_V_empty_n;
output   A_5_V_V_read;
input  [31:0] A_6_V_V_dout;
input   A_6_V_V_empty_n;
output   A_6_V_V_read;
input  [31:0] A_7_V_V_dout;
input   A_7_V_V_empty_n;
output   A_7_V_V_read;
input  [31:0] A_8_V_V_dout;
input   A_8_V_V_empty_n;
output   A_8_V_V_read;
input  [31:0] A_9_V_V_dout;
input   A_9_V_V_empty_n;
output   A_9_V_V_read;
input  [31:0] A_10_V_V_dout;
input   A_10_V_V_empty_n;
output   A_10_V_V_read;
input  [31:0] A_11_V_V_dout;
input   A_11_V_V_empty_n;
output   A_11_V_V_read;
input  [31:0] A_12_V_V_dout;
input   A_12_V_V_empty_n;
output   A_12_V_V_read;
input  [31:0] A_13_V_V_dout;
input   A_13_V_V_empty_n;
output   A_13_V_V_read;
input  [31:0] A_14_V_V_dout;
input   A_14_V_V_empty_n;
output   A_14_V_V_read;
input  [31:0] A_15_V_V_dout;
input   A_15_V_V_empty_n;
output   A_15_V_V_read;
input  [31:0] B_0_V_V_dout;
input   B_0_V_V_empty_n;
output   B_0_V_V_read;
input  [31:0] B_1_V_V_dout;
input   B_1_V_V_empty_n;
output   B_1_V_V_read;
input  [31:0] B_2_V_V_dout;
input   B_2_V_V_empty_n;
output   B_2_V_V_read;
input  [31:0] B_3_V_V_dout;
input   B_3_V_V_empty_n;
output   B_3_V_V_read;
input  [31:0] B_4_V_V_dout;
input   B_4_V_V_empty_n;
output   B_4_V_V_read;
input  [31:0] B_5_V_V_dout;
input   B_5_V_V_empty_n;
output   B_5_V_V_read;
input  [31:0] B_6_V_V_dout;
input   B_6_V_V_empty_n;
output   B_6_V_V_read;
input  [31:0] B_7_V_V_dout;
input   B_7_V_V_empty_n;
output   B_7_V_V_read;
input  [31:0] B_8_V_V_dout;
input   B_8_V_V_empty_n;
output   B_8_V_V_read;
input  [31:0] B_9_V_V_dout;
input   B_9_V_V_empty_n;
output   B_9_V_V_read;
input  [31:0] B_10_V_V_dout;
input   B_10_V_V_empty_n;
output   B_10_V_V_read;
input  [31:0] B_11_V_V_dout;
input   B_11_V_V_empty_n;
output   B_11_V_V_read;
input  [31:0] B_12_V_V_dout;
input   B_12_V_V_empty_n;
output   B_12_V_V_read;
input  [31:0] B_13_V_V_dout;
input   B_13_V_V_empty_n;
output   B_13_V_V_read;
input  [31:0] B_14_V_V_dout;
input   B_14_V_V_empty_n;
output   B_14_V_V_read;
input  [31:0] B_15_V_V_dout;
input   B_15_V_V_empty_n;
output   B_15_V_V_read;
input  [31:0] C_0_V_V_dout;
input   C_0_V_V_empty_n;
output   C_0_V_V_read;
input  [31:0] C_1_V_V_dout;
input   C_1_V_V_empty_n;
output   C_1_V_V_read;
input  [31:0] C_2_V_V_dout;
input   C_2_V_V_empty_n;
output   C_2_V_V_read;
input  [31:0] C_3_V_V_dout;
input   C_3_V_V_empty_n;
output   C_3_V_V_read;
input  [31:0] C_4_V_V_dout;
input   C_4_V_V_empty_n;
output   C_4_V_V_read;
input  [31:0] C_5_V_V_dout;
input   C_5_V_V_empty_n;
output   C_5_V_V_read;
input  [31:0] C_6_V_V_dout;
input   C_6_V_V_empty_n;
output   C_6_V_V_read;
input  [31:0] C_7_V_V_dout;
input   C_7_V_V_empty_n;
output   C_7_V_V_read;
input  [31:0] C_8_V_V_dout;
input   C_8_V_V_empty_n;
output   C_8_V_V_read;
input  [31:0] C_9_V_V_dout;
input   C_9_V_V_empty_n;
output   C_9_V_V_read;
input  [31:0] C_10_V_V_dout;
input   C_10_V_V_empty_n;
output   C_10_V_V_read;
input  [31:0] C_11_V_V_dout;
input   C_11_V_V_empty_n;
output   C_11_V_V_read;
input  [31:0] C_12_V_V_dout;
input   C_12_V_V_empty_n;
output   C_12_V_V_read;
input  [31:0] C_13_V_V_dout;
input   C_13_V_V_empty_n;
output   C_13_V_V_read;
input  [31:0] C_14_V_V_dout;
input   C_14_V_V_empty_n;
output   C_14_V_V_read;
input  [31:0] C_15_V_V_dout;
input   C_15_V_V_empty_n;
output   C_15_V_V_read;
output  [255:0] i_output_TDATA;
output   i_output_TVALID;
output  [0:0] i_output_TLAST;
output  [255:0] q_output_TDATA;
output   q_output_TVALID;
output  [0:0] q_output_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_0_V_V_read;
reg A_1_V_V_read;
reg A_2_V_V_read;
reg A_3_V_V_read;
reg A_4_V_V_read;
reg A_5_V_V_read;
reg A_6_V_V_read;
reg A_7_V_V_read;
reg A_8_V_V_read;
reg A_9_V_V_read;
reg A_10_V_V_read;
reg A_11_V_V_read;
reg A_12_V_V_read;
reg A_13_V_V_read;
reg A_14_V_V_read;
reg A_15_V_V_read;
reg B_0_V_V_read;
reg B_1_V_V_read;
reg B_2_V_V_read;
reg B_3_V_V_read;
reg B_4_V_V_read;
reg B_5_V_V_read;
reg B_6_V_V_read;
reg B_7_V_V_read;
reg B_8_V_V_read;
reg B_9_V_V_read;
reg B_10_V_V_read;
reg B_11_V_V_read;
reg B_12_V_V_read;
reg B_13_V_V_read;
reg B_14_V_V_read;
reg B_15_V_V_read;
reg C_0_V_V_read;
reg C_1_V_V_read;
reg C_2_V_V_read;
reg C_3_V_V_read;
reg C_4_V_V_read;
reg C_5_V_V_read;
reg C_6_V_V_read;
reg C_7_V_V_read;
reg C_8_V_V_read;
reg C_9_V_V_read;
reg C_10_V_V_read;
reg C_11_V_V_read;
reg C_12_V_V_read;
reg C_13_V_V_read;
reg C_14_V_V_read;
reg C_15_V_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln134_1_fu_695_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state2_io;
wire    regslice_forward_i_output_data_V_U_apdone_blk;
wire    regslice_forward_q_output_data_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    i_output_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    q_output_TDATA_blk_n;
reg   [8:0] cycle_01_reg_491;
wire   [0:0] tmp_17_fu_681_p3;
reg   [0:0] icmp_ln134_1_reg_1265;
wire   [0:0] or_ln134_fu_701_p2;
wire   [0:0] icmp_ln119_fu_709_p2;
wire   [8:0] cycle_fu_715_p2;
reg   [8:0] cycle_reg_1279;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg   [8:0] ap_phi_mux_cycle_01_phi_fu_495_p6;
reg   [31:0] ap_phi_mux_p_Val2_0_phi_fu_508_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_0_reg_505;
reg   [31:0] ap_phi_mux_p_Val2_1_phi_fu_519_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_1_reg_516;
reg   [31:0] ap_phi_mux_p_Val2_2_phi_fu_530_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_2_reg_527;
reg   [31:0] ap_phi_mux_p_Val2_3_phi_fu_541_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_3_reg_538;
reg   [31:0] ap_phi_mux_p_Val2_4_phi_fu_552_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_4_reg_549;
reg   [31:0] ap_phi_mux_p_Val2_5_phi_fu_563_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_5_reg_560;
reg   [31:0] ap_phi_mux_p_Val2_6_phi_fu_574_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_6_reg_571;
reg   [31:0] ap_phi_mux_p_Val2_7_phi_fu_585_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_7_reg_582;
reg   [31:0] ap_phi_mux_p_Val2_8_phi_fu_596_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_8_reg_593;
reg   [31:0] ap_phi_mux_p_Val2_9_phi_fu_607_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_9_reg_604;
reg   [31:0] ap_phi_mux_p_Val2_10_phi_fu_618_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_10_reg_615;
reg   [31:0] ap_phi_mux_p_Val2_11_phi_fu_629_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_11_reg_626;
reg   [31:0] ap_phi_mux_p_Val2_12_phi_fu_640_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_12_reg_637;
reg   [31:0] ap_phi_mux_p_Val2_13_phi_fu_651_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_13_reg_648;
reg   [31:0] ap_phi_mux_p_Val2_14_phi_fu_662_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_14_reg_659;
reg   [31:0] ap_phi_mux_p_Val2_15_phi_fu_673_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_p_Val2_15_reg_670;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln134_fu_689_p2;
wire   [15:0] trunc_ln647_15_fu_1171_p1;
wire   [15:0] trunc_ln647_14_fu_1142_p1;
wire   [15:0] trunc_ln647_13_fu_1113_p1;
wire   [15:0] trunc_ln647_12_fu_1084_p1;
wire   [15:0] trunc_ln647_11_fu_1055_p1;
wire   [15:0] trunc_ln647_10_fu_1026_p1;
wire   [15:0] trunc_ln647_9_fu_997_p1;
wire   [15:0] trunc_ln647_8_fu_968_p1;
wire   [15:0] trunc_ln647_7_fu_939_p1;
wire   [15:0] trunc_ln647_6_fu_910_p1;
wire   [15:0] trunc_ln647_5_fu_881_p1;
wire   [15:0] trunc_ln647_4_fu_852_p1;
wire   [15:0] trunc_ln647_3_fu_823_p1;
wire   [15:0] trunc_ln647_2_fu_794_p1;
wire   [15:0] trunc_ln647_1_fu_765_p1;
wire   [15:0] trunc_ln647_fu_736_p1;
wire   [15:0] p_Result_1_14_fu_1212_p4;
wire   [15:0] p_Result_1_13_fu_1146_p4;
wire   [15:0] p_Result_1_12_fu_1117_p4;
wire   [15:0] p_Result_1_11_fu_1088_p4;
wire   [15:0] p_Result_1_10_fu_1059_p4;
wire   [15:0] p_Result_1_s_fu_1030_p4;
wire   [15:0] p_Result_1_9_fu_1001_p4;
wire   [15:0] p_Result_1_8_fu_972_p4;
wire   [15:0] p_Result_1_7_fu_943_p4;
wire   [15:0] p_Result_1_6_fu_914_p4;
wire   [15:0] p_Result_1_5_fu_885_p4;
wire   [15:0] p_Result_1_4_fu_856_p4;
wire   [15:0] p_Result_1_3_fu_827_p4;
wire   [15:0] p_Result_1_2_fu_798_p4;
wire   [15:0] p_Result_1_1_fu_769_p4;
wire   [15:0] p_Result_1_fu_740_p4;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [255:0] i_output_TDATA_int;
reg    i_output_TVALID_int;
wire    i_output_TREADY_int;
wire    regslice_forward_i_output_data_V_U_vld_out;
wire    regslice_forward_i_output_last_V_U_apdone_blk;
wire    regslice_forward_i_output_last_V_U_ack_in_dummy;
wire    regslice_forward_i_output_last_V_U_vld_out;
wire   [255:0] q_output_TDATA_int;
reg    q_output_TVALID_int;
wire    q_output_TREADY_int;
wire    regslice_forward_q_output_data_V_U_vld_out;
wire    regslice_forward_q_output_last_V_U_apdone_blk;
wire    regslice_forward_q_output_last_V_U_ack_in_dummy;
wire    regslice_forward_q_output_last_V_U_vld_out;
reg    ap_condition_269;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

regslice_forward #(
    .DataWidth( 256 ))
regslice_forward_i_output_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(i_output_TDATA_int),
    .vld_in(i_output_TVALID_int),
    .ack_in(i_output_TREADY_int),
    .data_out(i_output_TDATA),
    .vld_out(regslice_forward_i_output_data_V_U_vld_out),
    .ack_out(i_output_TREADY),
    .apdone_blk(regslice_forward_i_output_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_i_output_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(or_ln134_fu_701_p2),
    .vld_in(i_output_TVALID_int),
    .ack_in(regslice_forward_i_output_last_V_U_ack_in_dummy),
    .data_out(i_output_TLAST),
    .vld_out(regslice_forward_i_output_last_V_U_vld_out),
    .ack_out(i_output_TREADY),
    .apdone_blk(regslice_forward_i_output_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 256 ))
regslice_forward_q_output_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(q_output_TDATA_int),
    .vld_in(q_output_TVALID_int),
    .ack_in(q_output_TREADY_int),
    .data_out(q_output_TDATA),
    .vld_out(regslice_forward_q_output_data_V_U_vld_out),
    .ack_out(q_output_TREADY),
    .apdone_blk(regslice_forward_q_output_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_q_output_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(or_ln134_fu_701_p2),
    .vld_in(q_output_TVALID_int),
    .ack_in(regslice_forward_q_output_last_V_U_ack_in_dummy),
    .data_out(q_output_TLAST),
    .vld_out(regslice_forward_q_output_last_V_U_vld_out),
    .ack_out(q_output_TREADY),
    .apdone_blk(regslice_forward_q_output_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln134_1_reg_1265 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln134_1_reg_1265 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cycle_01_reg_491 <= cycle_reg_1279;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln134_1_reg_1265 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        cycle_01_reg_491 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cycle_reg_1279 <= cycle_fu_715_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln134_1_reg_1265 <= icmp_ln134_1_fu_695_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (1'b1 == A_0_V_V_empty_n) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_0_V_V_read = 1'b1;
    end else begin
        A_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_10_V_V_empty_n))) begin
        A_10_V_V_read = 1'b1;
    end else begin
        A_10_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_11_V_V_empty_n))) begin
        A_11_V_V_read = 1'b1;
    end else begin
        A_11_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_12_V_V_empty_n))) begin
        A_12_V_V_read = 1'b1;
    end else begin
        A_12_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_13_V_V_empty_n))) begin
        A_13_V_V_read = 1'b1;
    end else begin
        A_13_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_14_V_V_empty_n))) begin
        A_14_V_V_read = 1'b1;
    end else begin
        A_14_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_15_V_V_empty_n))) begin
        A_15_V_V_read = 1'b1;
    end else begin
        A_15_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (1'b1 == A_1_V_V_empty_n) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_1_V_V_read = 1'b1;
    end else begin
        A_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (1'b1 == A_2_V_V_empty_n) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_2_V_V_read = 1'b1;
    end else begin
        A_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (1'b1 == A_3_V_V_empty_n) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_3_V_V_read = 1'b1;
    end else begin
        A_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (1'b1 == A_4_V_V_empty_n) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_4_V_V_read = 1'b1;
    end else begin
        A_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (1'b1 == A_5_V_V_empty_n) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_5_V_V_read = 1'b1;
    end else begin
        A_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (1'b1 == A_6_V_V_empty_n) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_6_V_V_read = 1'b1;
    end else begin
        A_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (1'b1 == A_7_V_V_empty_n) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_7_V_V_read = 1'b1;
    end else begin
        A_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (1'b1 == A_8_V_V_empty_n) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_8_V_V_read = 1'b1;
    end else begin
        A_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_17_fu_681_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == A_9_V_V_empty_n))) begin
        A_9_V_V_read = 1'b1;
    end else begin
        A_9_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_0_V_V_empty_n))) begin
        B_0_V_V_read = 1'b1;
    end else begin
        B_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_10_V_V_empty_n))) begin
        B_10_V_V_read = 1'b1;
    end else begin
        B_10_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_11_V_V_empty_n))) begin
        B_11_V_V_read = 1'b1;
    end else begin
        B_11_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_12_V_V_empty_n))) begin
        B_12_V_V_read = 1'b1;
    end else begin
        B_12_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_13_V_V_empty_n))) begin
        B_13_V_V_read = 1'b1;
    end else begin
        B_13_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_14_V_V_empty_n))) begin
        B_14_V_V_read = 1'b1;
    end else begin
        B_14_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_15_V_V_empty_n))) begin
        B_15_V_V_read = 1'b1;
    end else begin
        B_15_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_1_V_V_empty_n))) begin
        B_1_V_V_read = 1'b1;
    end else begin
        B_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_2_V_V_empty_n))) begin
        B_2_V_V_read = 1'b1;
    end else begin
        B_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_3_V_V_empty_n))) begin
        B_3_V_V_read = 1'b1;
    end else begin
        B_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_4_V_V_empty_n))) begin
        B_4_V_V_read = 1'b1;
    end else begin
        B_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_5_V_V_empty_n))) begin
        B_5_V_V_read = 1'b1;
    end else begin
        B_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_6_V_V_empty_n))) begin
        B_6_V_V_read = 1'b1;
    end else begin
        B_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_7_V_V_empty_n))) begin
        B_7_V_V_read = 1'b1;
    end else begin
        B_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_8_V_V_empty_n))) begin
        B_8_V_V_read = 1'b1;
    end else begin
        B_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == B_9_V_V_empty_n))) begin
        B_9_V_V_read = 1'b1;
    end else begin
        B_9_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_0_V_V_empty_n))) begin
        C_0_V_V_read = 1'b1;
    end else begin
        C_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_10_V_V_empty_n))) begin
        C_10_V_V_read = 1'b1;
    end else begin
        C_10_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_11_V_V_empty_n))) begin
        C_11_V_V_read = 1'b1;
    end else begin
        C_11_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_12_V_V_empty_n))) begin
        C_12_V_V_read = 1'b1;
    end else begin
        C_12_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_13_V_V_empty_n))) begin
        C_13_V_V_read = 1'b1;
    end else begin
        C_13_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_14_V_V_empty_n))) begin
        C_14_V_V_read = 1'b1;
    end else begin
        C_14_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_15_V_V_empty_n))) begin
        C_15_V_V_read = 1'b1;
    end else begin
        C_15_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_1_V_V_empty_n))) begin
        C_1_V_V_read = 1'b1;
    end else begin
        C_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_2_V_V_empty_n))) begin
        C_2_V_V_read = 1'b1;
    end else begin
        C_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_3_V_V_empty_n))) begin
        C_3_V_V_read = 1'b1;
    end else begin
        C_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_4_V_V_empty_n))) begin
        C_4_V_V_read = 1'b1;
    end else begin
        C_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_5_V_V_empty_n))) begin
        C_5_V_V_read = 1'b1;
    end else begin
        C_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_6_V_V_empty_n))) begin
        C_6_V_V_read = 1'b1;
    end else begin
        C_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_7_V_V_empty_n))) begin
        C_7_V_V_read = 1'b1;
    end else begin
        C_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_8_V_V_empty_n))) begin
        C_8_V_V_read = 1'b1;
    end else begin
        C_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == C_9_V_V_empty_n))) begin
        C_9_V_V_read = 1'b1;
    end else begin
        C_9_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln134_1_reg_1265 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_269)) begin
        if ((icmp_ln134_1_reg_1265 == 1'd1)) begin
            ap_phi_mux_cycle_01_phi_fu_495_p6 = 9'd0;
        end else if ((icmp_ln134_1_reg_1265 == 1'd0)) begin
            ap_phi_mux_cycle_01_phi_fu_495_p6 = cycle_reg_1279;
        end else begin
            ap_phi_mux_cycle_01_phi_fu_495_p6 = cycle_01_reg_491;
        end
    end else begin
        ap_phi_mux_cycle_01_phi_fu_495_p6 = cycle_01_reg_491;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_0_phi_fu_508_p6 = C_0_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_0_phi_fu_508_p6 = B_0_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_0_phi_fu_508_p6 = A_0_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_0_phi_fu_508_p6 = ap_phi_reg_pp0_iter0_p_Val2_0_reg_505;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_10_phi_fu_618_p6 = C_10_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_10_phi_fu_618_p6 = B_10_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_10_phi_fu_618_p6 = A_10_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_10_phi_fu_618_p6 = ap_phi_reg_pp0_iter0_p_Val2_10_reg_615;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_11_phi_fu_629_p6 = C_11_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_11_phi_fu_629_p6 = B_11_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_11_phi_fu_629_p6 = A_11_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_11_phi_fu_629_p6 = ap_phi_reg_pp0_iter0_p_Val2_11_reg_626;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_12_phi_fu_640_p6 = C_12_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_12_phi_fu_640_p6 = B_12_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_12_phi_fu_640_p6 = A_12_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_12_phi_fu_640_p6 = ap_phi_reg_pp0_iter0_p_Val2_12_reg_637;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_13_phi_fu_651_p6 = C_13_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_13_phi_fu_651_p6 = B_13_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_13_phi_fu_651_p6 = A_13_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_13_phi_fu_651_p6 = ap_phi_reg_pp0_iter0_p_Val2_13_reg_648;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_14_phi_fu_662_p6 = C_14_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_14_phi_fu_662_p6 = B_14_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_14_phi_fu_662_p6 = A_14_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_14_phi_fu_662_p6 = ap_phi_reg_pp0_iter0_p_Val2_14_reg_659;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_15_phi_fu_673_p6 = C_15_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_15_phi_fu_673_p6 = B_15_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_15_phi_fu_673_p6 = A_15_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_15_phi_fu_673_p6 = ap_phi_reg_pp0_iter0_p_Val2_15_reg_670;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_1_phi_fu_519_p6 = C_1_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_1_phi_fu_519_p6 = B_1_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_1_phi_fu_519_p6 = A_1_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_1_phi_fu_519_p6 = ap_phi_reg_pp0_iter0_p_Val2_1_reg_516;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_2_phi_fu_530_p6 = C_2_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_2_phi_fu_530_p6 = B_2_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_2_phi_fu_530_p6 = A_2_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_2_phi_fu_530_p6 = ap_phi_reg_pp0_iter0_p_Val2_2_reg_527;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_3_phi_fu_541_p6 = C_3_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_3_phi_fu_541_p6 = B_3_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_3_phi_fu_541_p6 = A_3_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_3_phi_fu_541_p6 = ap_phi_reg_pp0_iter0_p_Val2_3_reg_538;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_4_phi_fu_552_p6 = C_4_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_4_phi_fu_552_p6 = B_4_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_4_phi_fu_552_p6 = A_4_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_4_phi_fu_552_p6 = ap_phi_reg_pp0_iter0_p_Val2_4_reg_549;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_5_phi_fu_563_p6 = C_5_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_5_phi_fu_563_p6 = B_5_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_5_phi_fu_563_p6 = A_5_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_5_phi_fu_563_p6 = ap_phi_reg_pp0_iter0_p_Val2_5_reg_560;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_6_phi_fu_574_p6 = C_6_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_6_phi_fu_574_p6 = B_6_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_6_phi_fu_574_p6 = A_6_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_6_phi_fu_574_p6 = ap_phi_reg_pp0_iter0_p_Val2_6_reg_571;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_7_phi_fu_585_p6 = C_7_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_7_phi_fu_585_p6 = B_7_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_7_phi_fu_585_p6 = A_7_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_7_phi_fu_585_p6 = ap_phi_reg_pp0_iter0_p_Val2_7_reg_582;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_8_phi_fu_596_p6 = C_8_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_8_phi_fu_596_p6 = B_8_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_8_phi_fu_596_p6 = A_8_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_8_phi_fu_596_p6 = ap_phi_reg_pp0_iter0_p_Val2_8_reg_593;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_709_p2 == 1'd0) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_9_phi_fu_607_p6 = C_9_V_V_dout;
    end else if (((icmp_ln119_fu_709_p2 == 1'd1) & (tmp_17_fu_681_p3 == 1'd1))) begin
        ap_phi_mux_p_Val2_9_phi_fu_607_p6 = B_9_V_V_dout;
    end else if ((tmp_17_fu_681_p3 == 1'd0)) begin
        ap_phi_mux_p_Val2_9_phi_fu_607_p6 = A_9_V_V_dout;
    end else begin
        ap_phi_mux_p_Val2_9_phi_fu_607_p6 = ap_phi_reg_pp0_iter0_p_Val2_9_reg_604;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln134_1_fu_695_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        i_output_TDATA_blk_n = i_output_TREADY_int;
    end else begin
        i_output_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_output_TVALID_int = 1'b1;
    end else begin
        i_output_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        q_output_TDATA_blk_n = q_output_TREADY_int;
    end else begin
        q_output_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_output_TVALID_int = 1'b1;
    end else begin
        q_output_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_forward_q_output_data_V_U_apdone_blk == 1'b1) | (regslice_forward_i_output_data_V_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_forward_q_output_data_V_U_apdone_blk == 1'b1) | (regslice_forward_i_output_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io))) | ((ap_start == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_forward_q_output_data_V_U_apdone_blk == 1'b1) | (regslice_forward_i_output_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io))) | ((ap_start == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_io = ((q_output_TREADY_int == 1'b0) | (i_output_TREADY_int == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((q_output_TREADY_int == 1'b0) | (i_output_TREADY_int == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((regslice_forward_q_output_data_V_U_apdone_blk == 1'b1) | (regslice_forward_i_output_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_condition_269 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_p_Val2_0_reg_505 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_10_reg_615 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_11_reg_626 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_12_reg_637 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_13_reg_648 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_14_reg_659 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_15_reg_670 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_1_reg_516 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_2_reg_527 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_3_reg_538 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_4_reg_549 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_5_reg_560 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_6_reg_571 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_7_reg_582 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_8_reg_593 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_9_reg_604 = 'bx;

assign cycle_fu_715_p2 = (ap_phi_mux_cycle_01_phi_fu_495_p6 + 9'd1);

assign i_output_TDATA_int = {{{{{{{{{{{{{{{{trunc_ln647_15_fu_1171_p1}, {trunc_ln647_14_fu_1142_p1}}, {trunc_ln647_13_fu_1113_p1}}, {trunc_ln647_12_fu_1084_p1}}, {trunc_ln647_11_fu_1055_p1}}, {trunc_ln647_10_fu_1026_p1}}, {trunc_ln647_9_fu_997_p1}}, {trunc_ln647_8_fu_968_p1}}, {trunc_ln647_7_fu_939_p1}}, {trunc_ln647_6_fu_910_p1}}, {trunc_ln647_5_fu_881_p1}}, {trunc_ln647_4_fu_852_p1}}, {trunc_ln647_3_fu_823_p1}}, {trunc_ln647_2_fu_794_p1}}, {trunc_ln647_1_fu_765_p1}}, {trunc_ln647_fu_736_p1}};

assign i_output_TVALID = regslice_forward_i_output_data_V_U_vld_out;

assign icmp_ln119_fu_709_p2 = ((ap_phi_mux_cycle_01_phi_fu_495_p6 > 9'd383) ? 1'b1 : 1'b0);

assign icmp_ln134_1_fu_695_p2 = ((ap_phi_mux_cycle_01_phi_fu_495_p6 == 9'd511) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_689_p2 = ((ap_phi_mux_cycle_01_phi_fu_495_p6 == 9'd255) ? 1'b1 : 1'b0);

assign or_ln134_fu_701_p2 = (icmp_ln134_fu_689_p2 | icmp_ln134_1_fu_695_p2);

assign p_Result_1_10_fu_1059_p4 = {{ap_phi_mux_p_Val2_11_phi_fu_629_p6[31:16]}};

assign p_Result_1_11_fu_1088_p4 = {{ap_phi_mux_p_Val2_12_phi_fu_640_p6[31:16]}};

assign p_Result_1_12_fu_1117_p4 = {{ap_phi_mux_p_Val2_13_phi_fu_651_p6[31:16]}};

assign p_Result_1_13_fu_1146_p4 = {{ap_phi_mux_p_Val2_14_phi_fu_662_p6[31:16]}};

assign p_Result_1_14_fu_1212_p4 = {{ap_phi_mux_p_Val2_15_phi_fu_673_p6[31:16]}};

assign p_Result_1_1_fu_769_p4 = {{ap_phi_mux_p_Val2_1_phi_fu_519_p6[31:16]}};

assign p_Result_1_2_fu_798_p4 = {{ap_phi_mux_p_Val2_2_phi_fu_530_p6[31:16]}};

assign p_Result_1_3_fu_827_p4 = {{ap_phi_mux_p_Val2_3_phi_fu_541_p6[31:16]}};

assign p_Result_1_4_fu_856_p4 = {{ap_phi_mux_p_Val2_4_phi_fu_552_p6[31:16]}};

assign p_Result_1_5_fu_885_p4 = {{ap_phi_mux_p_Val2_5_phi_fu_563_p6[31:16]}};

assign p_Result_1_6_fu_914_p4 = {{ap_phi_mux_p_Val2_6_phi_fu_574_p6[31:16]}};

assign p_Result_1_7_fu_943_p4 = {{ap_phi_mux_p_Val2_7_phi_fu_585_p6[31:16]}};

assign p_Result_1_8_fu_972_p4 = {{ap_phi_mux_p_Val2_8_phi_fu_596_p6[31:16]}};

assign p_Result_1_9_fu_1001_p4 = {{ap_phi_mux_p_Val2_9_phi_fu_607_p6[31:16]}};

assign p_Result_1_fu_740_p4 = {{ap_phi_mux_p_Val2_0_phi_fu_508_p6[31:16]}};

assign p_Result_1_s_fu_1030_p4 = {{ap_phi_mux_p_Val2_10_phi_fu_618_p6[31:16]}};

assign q_output_TDATA_int = {{{{{{{{{{{{{{{{p_Result_1_14_fu_1212_p4}, {p_Result_1_13_fu_1146_p4}}, {p_Result_1_12_fu_1117_p4}}, {p_Result_1_11_fu_1088_p4}}, {p_Result_1_10_fu_1059_p4}}, {p_Result_1_s_fu_1030_p4}}, {p_Result_1_9_fu_1001_p4}}, {p_Result_1_8_fu_972_p4}}, {p_Result_1_7_fu_943_p4}}, {p_Result_1_6_fu_914_p4}}, {p_Result_1_5_fu_885_p4}}, {p_Result_1_4_fu_856_p4}}, {p_Result_1_3_fu_827_p4}}, {p_Result_1_2_fu_798_p4}}, {p_Result_1_1_fu_769_p4}}, {p_Result_1_fu_740_p4}};

assign q_output_TVALID = regslice_forward_q_output_data_V_U_vld_out;

assign tmp_17_fu_681_p3 = ap_phi_mux_cycle_01_phi_fu_495_p6[32'd8];

assign trunc_ln647_10_fu_1026_p1 = ap_phi_mux_p_Val2_10_phi_fu_618_p6[15:0];

assign trunc_ln647_11_fu_1055_p1 = ap_phi_mux_p_Val2_11_phi_fu_629_p6[15:0];

assign trunc_ln647_12_fu_1084_p1 = ap_phi_mux_p_Val2_12_phi_fu_640_p6[15:0];

assign trunc_ln647_13_fu_1113_p1 = ap_phi_mux_p_Val2_13_phi_fu_651_p6[15:0];

assign trunc_ln647_14_fu_1142_p1 = ap_phi_mux_p_Val2_14_phi_fu_662_p6[15:0];

assign trunc_ln647_15_fu_1171_p1 = ap_phi_mux_p_Val2_15_phi_fu_673_p6[15:0];

assign trunc_ln647_1_fu_765_p1 = ap_phi_mux_p_Val2_1_phi_fu_519_p6[15:0];

assign trunc_ln647_2_fu_794_p1 = ap_phi_mux_p_Val2_2_phi_fu_530_p6[15:0];

assign trunc_ln647_3_fu_823_p1 = ap_phi_mux_p_Val2_3_phi_fu_541_p6[15:0];

assign trunc_ln647_4_fu_852_p1 = ap_phi_mux_p_Val2_4_phi_fu_552_p6[15:0];

assign trunc_ln647_5_fu_881_p1 = ap_phi_mux_p_Val2_5_phi_fu_563_p6[15:0];

assign trunc_ln647_6_fu_910_p1 = ap_phi_mux_p_Val2_6_phi_fu_574_p6[15:0];

assign trunc_ln647_7_fu_939_p1 = ap_phi_mux_p_Val2_7_phi_fu_585_p6[15:0];

assign trunc_ln647_8_fu_968_p1 = ap_phi_mux_p_Val2_8_phi_fu_596_p6[15:0];

assign trunc_ln647_9_fu_997_p1 = ap_phi_mux_p_Val2_9_phi_fu_607_p6[15:0];

assign trunc_ln647_fu_736_p1 = ap_phi_mux_p_Val2_0_phi_fu_508_p6[15:0];

endmodule //play_output_lanes2ou
